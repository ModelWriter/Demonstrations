[Name94, Root133, FileSystem40, Link227, FSObject_2, Name79]

relation bounds:
 Dir: [[[Root133]], [[Root133], [FSObject_2]]]
 Link: [[[Link227]], [[Link227], [FSObject_2]]]
 File: [[], [[FSObject_2]]]
 Root: [[[Root133]], [[Root133], [FSObject_2]]]
 FileSystem: [[[FileSystem40]]]
 Name: [[[Name94], [Name79]]]
 ExecutableFile: [[], [[FSObject_2]]]
 Executable: [[], [[FSObject_2]]]
 FSObject: [[[Root133], [Link227], [FSObject_2]]]
 root: [[[FileSystem40, Root133]], [[FileSystem40, Root133], [FileSystem40, FSObject_2]]]
 content: [[[Root133, Link227]], [[Root133, Root133], [Root133, Link227], [Root133, FSObject_2], [FSObject_2, Root133], [FSObject_2, Link227], [FSObject_2, FSObject_2]]]
 name: [[[Root133, Name79], [Link227, Name79]], [[Root133, Name94], [Root133, Name79], [Link227, Name94], [Link227, Name79], [FSObject_2, Name94], [FSObject_2, Name79]]]
 link: [[], [[Link227, Root133], [Link227, Link227], [Link227, FSObject_2], [FSObject_2, Root133], [FSObject_2, Link227], [FSObject_2, FSObject_2]]]
 depend: [[], [[FSObject_2, FSObject_2]]]
 names: [[[FileSystem40, Name94], [FileSystem40, Name79]]]
int bounds: 
 []

no (FileSystem & Name) 
no (FileSystem & Executable) 
no (FileSystem & FSObject) 
no (Name & Executable) 
no (Name & FSObject) 
(all f: FileSystem.names | lone (f.~root + content + names)) 
(all f: FileSystem.root | lone (f.~root + content + names)) 
one FileSystem 
(all f: FileSystem | one (f.root)) 
(all f: FileSystem | some (f.names)) 
Executable = ExecutableFile 
ExecutableFile in Executable 
(all e: Executable | !(e in (e.^depend))) 
FSObject = Dir + Link + File 
Dir in FSObject 
Link in FSObject 
File in FSObject 
no (Dir & Link) 
no (Dir & File) 
no (Link & File) 
(all f: FSObject | one (f.name)) 
Root in Dir 
(all d: Dir.content | lone (d.~root + content + names)) 
(all d: Dir | !(d in (d.^content))) 
some content 
one Root 
(all l: Link | !(l in (l.^link))) 
(all l: Link | one (l.link)) 
ExecutableFile in File 
no (Root.~content) 
(all a: FSObject, b: FSObject | !(a = b) => ((a.~content) = (b.~content) =>  !((a.name) = (b.name)))) 
root in (FileSystem -> Root) 
content in (Dir -> FSObject) 
name in (FSObject -> Name) 
link in (Link -> FSObject) 
depend in (Executable -> File) 
names in (FileSystem -> Name) 
(FileSystem.*root + content + names) = Executable + FSObject + ExecutableFile + Dir + Link + Name + File + FileSystem + Root 
true 
true

---OUTCOME---
SATISFIABLE

---INSTANCE---
relations: {Dir=[[Root133]], Link=[[Link227]], File=[[FSObject_2]], Root=[[Root133]], FileSystem=[[FileSystem40]], Name=[[Name94], [Name79]], ExecutableFile=[], Executable=[], FSObject=[[Root133], [Link227], [FSObject_2]], root=[[FileSystem40, Root133]], content=[[Root133, Link227], [Root133, FSObject_2]], name=[[Root133, Name79], [Link227, Name79], [FSObject_2, Name94]], link=[[Link227, FSObject_2]], depend=[], names=[[FileSystem40, Name94], [FileSystem40, Name79]]}
ints: []

---STATS---
p cnf 179 188
primary variables: 23
translation time: 5 ms
solving time: 0 ms
