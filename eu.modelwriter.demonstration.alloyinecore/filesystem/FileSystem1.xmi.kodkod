[FSObject_3, FileSystem40, Root212, FSObject_2, Root118, Name79]

relation bounds:
 Dir: [[[Root212], [Root118]], [[FSObject_3], [Root212], [FSObject_2], [Root118]]]
 Link: [[], [[FSObject_3], [FSObject_2]]]
 File: [[], [[FSObject_3], [FSObject_2]]]
 FSObject: [[[FSObject_3], [Root212], [FSObject_2], [Root118]]]
 Name: [[[Name79]]]
 Root: [[[Root212], [Root118]], [[FSObject_3], [Root212], [FSObject_2], [Root118]]]
 FileSystem: [[[FileSystem40]]]
 ExecutableFile: [[], [[FSObject_3], [FSObject_2]]]
 Executable: [[], [[FSObject_3], [FSObject_2]]]
 root: [[[FileSystem40, Root118]], [[FileSystem40, FSObject_3], [FileSystem40, Root212], [FileSystem40, FSObject_2], [FileSystem40, Root118]]]
 content: [[[Root118, Root212]], [[FSObject_3, FSObject_3], [FSObject_3, Root212], [FSObject_3, FSObject_2], [FSObject_3, Root118], [Root212, FSObject_3], [Root212, Root212], [Root212, FSObject_2], [Root212, Root118], [FSObject_2, FSObject_3], [FSObject_2, Root212], [FSObject_2, FSObject_2], [FSObject_2, Root118], [Root118, FSObject_3], [Root118, Root212], [Root118, FSObject_2], [Root118, Root118]]]
 name: [[[Root118, Name79]], [[FSObject_3, Name79], [Root212, Name79], [FSObject_2, Name79], [Root118, Name79]]]
 link: [[], [[FSObject_3, FSObject_3], [FSObject_3, Root212], [FSObject_3, FSObject_2], [FSObject_3, Root118], [FSObject_2, FSObject_3], [FSObject_2, Root212], [FSObject_2, FSObject_2], [FSObject_2, Root118]]]
 depend: [[], [[FSObject_3, FSObject_3], [FSObject_3, FSObject_2], [FSObject_2, FSObject_3], [FSObject_2, FSObject_2]]]
 names: [[[FileSystem40, Name79]]]
int bounds: 
 []

no FileSystem & FSObject
no FileSystem & Name
no FileSystem & Executable
no FSObject & Name
no Name & Executable
all f: FileSystem.names | lone (f.~names + content + root)
all f: FileSystem.root | lone (f.~names + content + root)
one FileSystem
all f: FileSystem | one (f.root)
all f: FileSystem | some (f.names)
FSObject = Dir + Link + File
Dir in FSObject
Link in FSObject
File in FSObject
no Dir & Link
no Dir & File
no Link & File
all f: FSObject | one (f.name)
Root in Dir
all d: Dir.content | lone (d.~names + content + root)
all d: Dir | !(d in (d.^content))
some content
one Root
all l: Link | !(l in (l.^link))
all l: Link | one (l.link)
ExecutableFile in File
Executable = ExecutableFile
ExecutableFile in Executable
all e: Executable | !(e in (e.^depend))
no Root.~content
all a: FSObject, b: FSObject | !(a = b => 
  (a.~content = b.~content => 
 !(a.name = b.name)))
root in FileSystem -> Root
content in Dir -> FSObject
name in FSObject -> Name
link in Link -> FSObject
depend in Executable -> File
names in FileSystem -> Name
FileSystem.*names + content + root = Link + File + ExecutableFile + Root + 
Executable + Name + Dir + FSObject + FileSystem
true
true