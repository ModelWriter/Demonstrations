[Item_3, Item_2, Nil<? super Pen>, Item_1, Item_0, Nil<Paper>, Item-Pen, Nil<Item-Pen>, Container46, List<? super Pen>, ? super Pen, Nil<Pen>, PaperList_3, PaperList_2, List<Item-Pen>, PaperList_1, PaperList_0, List<Pen>, List_4, List<Paper>]

relation bounds:
 Nil: [[], [[PaperList_3], [PaperList_2], [PaperList_1], [List_4]]]
 PenList: [[], [[PaperList_3], [PaperList_2], [PaperList_1], [List_4]]]
 List: [[[PaperList_3], [PaperList_2], [PaperList_0]], [[PaperList_3], [PaperList_2], [PaperList_1], [PaperList_0], [List_4]]]
 Pen: [[], [[Item_3], [Item_2], [Item_1], [Item_0]]]
 Container: [[[Container46]]]
 Item: [[], [[Item_3], [Item_2], [Item_1], [Item_0]]]
 PaperList: [[[PaperList_0]], [[PaperList_3], [PaperList_2], [PaperList_1], [PaperList_0]]]
 Paper: [[], [[Item_3], [Item_2], [Item_1], [Item_0]]]
 Nil<Paper>: [[], [[PaperList_3], [PaperList_2], [PaperList_1], [List_4]]]
 Nil<Pen>: [[], [[PaperList_3], [PaperList_2], [PaperList_1], [List_4]]]
 Item-Pen: [[], [[Item_3], [Item_2], [Item_1], [Item_0]]]
 Nil<Item-Pen>: [[], [[PaperList_3], [PaperList_2], [PaperList_1], [List_4]]]
 List<Item-Pen>: [[], [[PaperList_3], [PaperList_2], [PaperList_1], [PaperList_0], [List_4]]]
 ? super Pen: [[], [[Item_3], [Item_2], [Item_1], [Item_0]]]
 List<Pen>: [[], [[PaperList_3], [PaperList_2], [PaperList_1], [PaperList_0], [List_4]]]
 List<? super Pen>: [[], [[PaperList_3], [PaperList_2], [PaperList_1], [PaperList_0], [List_4]]]
 Nil<? super Pen>: [[], [[PaperList_3], [PaperList_2], [PaperList_1], [List_4]]]
 List<Paper>: [[], [[PaperList_3], [PaperList_2], [PaperList_1], [PaperList_0], [List_4]]]
 list: [[], [[Container46, PaperList_3], [Container46, PaperList_2], [Container46, PaperList_1], [Container46, PaperList_0], [Container46, List_4]]]
 car: [[], [[PaperList_3, Item_3], [PaperList_3, Item_2], [PaperList_3, Item_1], [PaperList_3, Item_0], [PaperList_2, Item_3], [PaperList_2, Item_2], [PaperList_2, Item_1], [PaperList_2, Item_0], [PaperList_1, Item_3], [PaperList_1, Item_2], [PaperList_1, Item_1], [PaperList_1, Item_0], [PaperList_0, Item_3], [PaperList_0, Item_2], [PaperList_0, Item_1], [PaperList_0, Item_0], [List_4, Item_3], [List_4, Item_2], [List_4, Item_1], [List_4, Item_0]]]
 cdr: [[], [[PaperList_3, PaperList_3], [PaperList_3, PaperList_2], [PaperList_3, PaperList_1], [PaperList_3, PaperList_0], [PaperList_3, List_4], [PaperList_2, PaperList_3], [PaperList_2, PaperList_2], [PaperList_2, PaperList_1], [PaperList_2, PaperList_0], [PaperList_2, List_4], [PaperList_1, PaperList_3], [PaperList_1, PaperList_2], [PaperList_1, PaperList_1], [PaperList_1, PaperList_0], [PaperList_1, List_4], [PaperList_0, PaperList_3], [PaperList_0, PaperList_2], [PaperList_0, PaperList_1], [PaperList_0, PaperList_0], [PaperList_0, List_4], [List_4, PaperList_3], [List_4, PaperList_2], [List_4, PaperList_1], [List_4, PaperList_0], [List_4, List_4]]]
int bounds: 
 []

no List & Container
no List & Item
no Container & Item
Nil in List
PenList in List
PaperList in List
no Nil & PenList
no Nil & PaperList
no PenList & PaperList
all l: List.car | lone (l.~(car + cdr + list))
all l: List.cdr | lone (l.~(car + cdr + list))
all l: List | !(l in (l.^cdr))
all l: List | lone (l.car)
all l: List | lone (l.cdr)
all c: Container.list | lone (c.~(car + cdr + list))
one Container
all c: Container | some (c.list)
Item = Pen + Paper
Pen in Item
Paper in Item
no Pen & Paper
no Nil.car
no Nil.cdr
all l: List - Nil | some (l.cdr
  some l.car)
list in Container -> List
cdr in List -> List
Container.*(car + list + cdr) = (Container + List + Nil + Pen + Item + 
PaperList + PenList + Paper)
Item-Pen = Item - Pen
Item-Pen = ? super Pen
Container.list in List<? super Pen>
List<Item-Pen>.car in Item-Pen
List<Pen>.car in Pen
List<Paper>.car in Paper
car in (List<Item-Pen> -> Item-Pen + List<Pen> -> Pen + (List<Paper> -> 
Paper))
List<Item-Pen>.cdr in List<Item-Pen>
List<Pen>.cdr in List<Pen>
List<Paper>.cdr in List<Paper>
cdr in (List<Item-Pen> -> List<Item-Pen> + List<Pen> -> List<Pen> + (
List<Paper> -> List<Paper>))
Nil = Nil<Paper> + Nil<Pen> + Nil<Item-Pen> + Nil<? super Pen>
List = (Nil + PenList + PaperList + List<Item-Pen> + List<Pen> + 
List<? super Pen> + List<Paper>)
Nil<Item-Pen> in List<Item-Pen>
Nil<Pen> in List<Pen>
Nil<? super Pen> in List<? super Pen>
Nil<Paper> in List<Paper>
List<? super Pen> = List<Item-Pen>
Nil<? super Pen> = Nil<Item-Pen>
PaperList in List<Paper>
PenList in List<Pen>