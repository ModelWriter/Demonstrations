[Sarfraz, Emina, true, Requirement103, Daniel, Eunsuk, Requirement437, Specification54, false, Requirement262, Requirement539]

relation bounds:
 "Daniel": [[[Daniel]]]
 "Sarfraz": [[[Sarfraz]]]
 Requirement: [[[Requirement103], [Requirement437], [Requirement262], [Requirement539]]]
 "Emina": [[[Emina]]]
 Specification: [[[Specification54]]]
 EString: [[[Sarfraz], [Emina], [Daniel], [Eunsuk]]]
 EBoolean: [[[true], [false]]]
 "Eunsuk": [[[Eunsuk]]]
 requirements: [[[Specification54, Requirement103], [Specification54, Requirement437], [Specification54, Requirement262], [Specification54, Requirement539]]]
 name: [[[Requirement103, Eunsuk], [Requirement437, Emina], [Requirement262, Daniel], [Requirement539, Emina]], [[Requirement103, Sarfraz], [Requirement103, Emina], [Requirement103, Daniel], [Requirement103, Eunsuk], [Requirement437, Sarfraz], [Requirement437, Emina], [Requirement437, Daniel], [Requirement437, Eunsuk], [Requirement262, Sarfraz], [Requirement262, Emina], [Requirement262, Daniel], [Requirement262, Eunsuk], [Requirement539, Sarfraz], [Requirement539, Emina], [Requirement539, Daniel], [Requirement539, Eunsuk]]]
 conflicts: [[], [[Requirement103, Requirement103], [Requirement103, Requirement437], [Requirement103, Requirement262], [Requirement103, Requirement539], [Requirement437, Requirement103], [Requirement437, Requirement437], [Requirement437, Requirement262], [Requirement437, Requirement539], [Requirement262, Requirement103], [Requirement262, Requirement437], [Requirement262, Requirement262], [Requirement262, Requirement539], [Requirement539, Requirement103], [Requirement539, Requirement437], [Requirement539, Requirement262], [Requirement539, Requirement539]]]
 equals: [[[Requirement103, Requirement103], [Requirement437, Requirement437], [Requirement262, Requirement262], [Requirement539, Requirement539]], [[Requirement103, Requirement103], [Requirement103, Requirement437], [Requirement103, Requirement262], [Requirement103, Requirement539], [Requirement437, Requirement103], [Requirement437, Requirement437], [Requirement437, Requirement262], [Requirement437, Requirement539], [Requirement262, Requirement103], [Requirement262, Requirement437], [Requirement262, Requirement262], [Requirement262, Requirement539], [Requirement539, Requirement103], [Requirement539, Requirement437], [Requirement539, Requirement262], [Requirement539, Requirement539]]]
 partially_refines: [[], [[Requirement103, Requirement103], [Requirement103, Requirement437], [Requirement103, Requirement262], [Requirement103, Requirement539], [Requirement437, Requirement103], [Requirement437, Requirement437], [Requirement437, Requirement262], [Requirement437, Requirement539], [Requirement262, Requirement103], [Requirement262, Requirement437], [Requirement262, Requirement262], [Requirement262, Requirement539], [Requirement539, Requirement103], [Requirement539, Requirement437], [Requirement539, Requirement262], [Requirement539, Requirement539]]]
 contains: [[[Requirement103, Requirement437], [Requirement103, Requirement539], [Requirement262, Requirement103], [Requirement262, Requirement437], [Requirement262, Requirement539]], [[Requirement103, Requirement103], [Requirement103, Requirement437], [Requirement103, Requirement262], [Requirement103, Requirement539], [Requirement437, Requirement103], [Requirement437, Requirement437], [Requirement437, Requirement262], [Requirement437, Requirement539], [Requirement262, Requirement103], [Requirement262, Requirement437], [Requirement262, Requirement262], [Requirement262, Requirement539], [Requirement539, Requirement103], [Requirement539, Requirement437], [Requirement539, Requirement262], [Requirement539, Requirement539]]]
 req: [[], [[Requirement103, Requirement103], [Requirement103, Requirement437], [Requirement103, Requirement262], [Requirement103, Requirement539], [Requirement437, Requirement103], [Requirement437, Requirement437], [Requirement437, Requirement262], [Requirement437, Requirement539], [Requirement262, Requirement103], [Requirement262, Requirement437], [Requirement262, Requirement262], [Requirement262, Requirement539], [Requirement539, Requirement103], [Requirement539, Requirement437], [Requirement539, Requirement262], [Requirement539, Requirement539]]]
 refines: [[], [[Requirement103, Requirement103], [Requirement103, Requirement437], [Requirement103, Requirement262], [Requirement103, Requirement539], [Requirement437, Requirement103], [Requirement437, Requirement437], [Requirement437, Requirement262], [Requirement437, Requirement539], [Requirement262, Requirement103], [Requirement262, Requirement437], [Requirement262, Requirement262], [Requirement262, Requirement539], [Requirement539, Requirement103], [Requirement539, Requirement437], [Requirement539, Requirement262], [Requirement539, Requirement539]]]
int bounds: 
 []

(refines.refines) in refines 
(req.equals) in req 
(partially_refines.partially_refines) in partially_refines 
(all a: Requirement, b: Requirement | (b in (a.req) and  a in (b.req)) => a = b) 
(all a: Requirement, b: Requirement | (b in (a.refines) and  a in (b.refines)) => a = b) 
(req.refines) in req 
no ((conflicts + ~conflicts) & (partially_refines + ~partially_refines)) 
(equals.req) in req 
(all r: Requirement | !(r in (r.req))) 
equals in (Requirement -> Requirement) 
partially_refines in (Requirement -> Requirement) 
refines in (Requirement -> Requirement) 
(all r: Requirement | !(r in (r.contains))) 
conflicts = ~conflicts 
(all r: Requirement | !(r in (r.partially_refines))) 
(all r: Requirement | one (r.name)) 
("Daniel" + "Sarfraz" + "Emina" + "Eunsuk") in EString 
no ((req + ~req) & (refines + ~refines)) 
no ((req + ~req + refines + ~refines + contains + ~contains + equals + ~equals) & (conflicts + ~conflicts + partially_refines + ~partially_refines)) 
(refines.equals) in refines 
requirements in (Specification -> Requirement) 
(contains.equals) in contains 
contains in (Requirement -> Requirement) 
(refines.partially_refines) in partially_refines 
(partially_refines.equals) in partially_refines 
(equals.conflicts) in conflicts 
(all s: Specification.requirements | lone (s.~requirements)) 
(contains.req) in req 
(all r: Requirement | !(r in (r.conflicts))) 
no ((contains + ~contains) & (equals + ~equals)) 
(contains.partially_refines) in partially_refines 
(contains.refines) in refines 
(req.contains) in req 
(refines.contains) in refines 
(all a: Requirement, b: Requirement | (b in (a.contains) and  a in (b.contains)) => a = b) 
(equals.refines) in refines 
name in (Requirement -> EString) 
req in (Requirement -> Requirement) 
(req.req) in req 
conflicts in (Requirement -> Requirement) 
(all a: Requirement, b: Requirement | !(a = b) => !((a.name) = (b.name))) 
no (Requirement & Specification) 
no ((req + ~req + refines + ~refines) & (contains + ~contains + equals + ~equals)) 
(req.conflicts) in conflicts 
(refines.req) in req 
(equals.contains) in contains 
(all r: Requirement | !(r in (r.refines))) 
(contains.conflicts) in conflicts 
(conflicts.equals) in conflicts 
(equals.partially_refines) in partially_refines 
(contains.contains) in contains 
equals = ~equals 
(all r: Requirement | r in (r.equals)) 
(equals.equals) in equals 
(all a: Requirement, b: Requirement | (b in (a.partially_refines) and  a in (b.partially_refines)) => a = b) 
(Specification.*requirements) = (Specification + Requirement) 
(refines.conflicts) in conflicts

---OUTCOME---
UNSATISFIABLE

---PROOF---
kodkod.engine.ResolutionBasedProof@23a34186

---STATS---
p cnf 2375 4082
primary variables: 99
translation time: 39 ms
solving time: 0 ms


Invariants causing the conflict: 
(all r: one Requirement | one (r . name))(all [a: one Requirement, b: one Requirement] | (!(a = b) => !((a . name) = (b . name))))
Unsat core:
one (Requirement437 . name)
one (Requirement539 . name)
((Requirement437 . name) = (Requirement539 . name))
!((Requirement437 . name) = (Requirement539 . name))
(!(Requirement437 = Requirement539) => !((Requirement437 . name) = (Requirement539 . name)))
((Requirement539 . name) = (Requirement437 . name))
!((Requirement539 . name) = (Requirement437 . name))
(!(Requirement539 = Requirement437) => !((Requirement539 . name) = (Requirement437 . name)))
relations: {Requirement=[[Requirement437], [Requirement539]], name=[[Requirement437, Emina], [Requirement539, Emina]], $a=[[Requirement539]], $b=[[Requirement437]], "Daniel"=[], "Sarfraz"=[], "Emina"=[], Specification=[], EString=[], EBoolean=[], "Eunsuk"=[], requirements=[], conflicts=[], equals=[], partially_refines=[], contains=[], req=[], refines=[]}
ints: []

"Daniel":       Daniel
"Sarfraz":      Sarfraz
Requirement:    Requirement103, Requirement437, Requirement262, Requirement539
"Emina":        Emina
Specification:  Specification54
EString:        Emina, Sarfraz, Eunsuk, Daniel
EBoolean:       true, false
"Eunsuk":       Eunsuk

requirements (Specification54, Requirement437)
requirements (Specification54, Requirement262)
requirements (Specification54, Requirement539)
requirements (Specification54, Requirement103)
name (Requirement262, Daniel)
name (Requirement103, Eunsuk)
name (Requirement437, Emina)
name (Requirement539, Emina)
equals (Requirement539, Requirement539)
equals (Requirement437, Requirement437)
equals (Requirement103, Requirement103)
equals (Requirement262, Requirement262)
contains (Requirement103, Requirement539)
contains (Requirement262, Requirement103)
contains (Requirement103, Requirement437)
contains (Requirement262, Requirement437)
contains (Requirement262, Requirement539)
