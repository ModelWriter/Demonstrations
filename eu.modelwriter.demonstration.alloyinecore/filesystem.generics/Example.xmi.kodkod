[Example267, FSObject_3, Root166, FileSystem42, Name81, X118, FSObject_2, Y130]

relation bounds:
 Dir: [[[Root166]], [[FSObject_3], [Root166], [FSObject_2]]]
 Y: [[[Y130]]]
 X: [[[X118], [Y130]]]
 File: [[], [[FSObject_3], [FSObject_2]]]
 Example: [[[Example267]], [[Example267], [FSObject_3], [FSObject_2]]]
 Root: [[[Root166]], [[FSObject_3], [Root166], [FSObject_2]]]
 Name: [[[Name81]]]
 FileSystem: [[[FileSystem42]]]
 FSObject: [[[Example267], [FSObject_3], [Root166], [FSObject_2]]]
 names: [[[FileSystem42, Name81]]]
 root: [[[FileSystem42, Root166]], [[FileSystem42, FSObject_3], [FileSystem42, Root166], [FileSystem42, FSObject_2]]]
 name: [[[Example267, Y130], [Root166, Name81]], [[Example267, Name81], [Example267, Y130], [FSObject_3, Name81], [FSObject_3, Y130], [Root166, Name81], [Root166, Y130], [FSObject_2, Name81], [FSObject_2, Y130]]]
 contentExample: [[[Root166, Example267]], [[FSObject_3, Example267], [FSObject_3, FSObject_3], [FSObject_3, FSObject_2], [Root166, Example267], [Root166, FSObject_3], [Root166, FSObject_2], [FSObject_2, Example267], [FSObject_2, FSObject_3], [FSObject_2, FSObject_2]]]
 ys: [[[FileSystem42, X118], [FileSystem42, Y130]]]
 content: [[], [[FSObject_3, FSObject_3], [FSObject_3, Root166], [FSObject_3, FSObject_2], [Root166, FSObject_3], [Root166, Root166], [Root166, FSObject_2], [FSObject_2, FSObject_3], [FSObject_2, Root166], [FSObject_2, FSObject_2]]]
int bounds: 
 []

no Name & FileSystem
no Name & X
no Name & FSObject
no FileSystem & X
no FileSystem & FSObject
no X & FSObject
all n: Name | lone (n.~names)
all x: X | lone (x.~ys)
all r: Root | lone (r.~root)
one FileSystem
all f: FileSystem | one (f.root)
Y in X
FSObject = Dir + File + Example
Dir in FSObject
File in FSObject
Example in FSObject
no Dir & File
no Dir & Example
no File & Example
all f: FSObject | one (f.name)
Root in Dir
all f: FSObject | lone (f.~contentExample)
all f: FSObject | lone (f.~content)
all d: Dir | !(d in (d.^contentExample))
all d: Dir | !(d in (d.^content))
some contentExample
some content
one Root
all n: Name | n in (FileSystem.names)
all y: X | y in (FileSystem.ys)
FSObject in Root.*(content + contentExample)
no Root.~content
all a: FSObject - Root, b: FSObject - Root | !(a = b => 
  (a.~content = b.~content => 
 !(a.name = b.name)))
Root = FileSystem.root
names in FileSystem -> Name
root in FileSystem -> Root
name in (Example -> Y + Dir -> Name + File -> Name)
contentExample in Dir -> Example
ys in FileSystem -> X
content in Dir -> (File + Dir)