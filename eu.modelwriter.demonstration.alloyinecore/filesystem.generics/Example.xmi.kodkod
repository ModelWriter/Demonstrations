[FSObject_3, FileSystem42, FSObject_0, FSObject_1, FSObject_2, Name_3, Name_2, Name_1, Name_0]

relation bounds:
 FSObject: [[[FSObject_3], [FSObject_0], [FSObject_1], [FSObject_2]]]
 NameX: [[], [[Name_3], [Name_2], [Name_1], [Name_0]]]
 File: [[], [[FSObject_3], [FSObject_0], [FSObject_1], [FSObject_2]]]
 Name: [[[Name_3], [Name_2], [Name_1], [Name_0]]]
 Root: [[], [[FSObject_3], [FSObject_0], [FSObject_1], [FSObject_2]]]
 FileSystem: [[[FileSystem42]]]
 Dir: [[], [[FSObject_3], [FSObject_0], [FSObject_1], [FSObject_2]]]
 File2: [[], [[FSObject_3], [FSObject_0], [FSObject_1], [FSObject_2]]]
 names: [[], [[FileSystem42, Name_3], [FileSystem42, Name_2], [FileSystem42, Name_1], [FileSystem42, Name_0]]]
 root: [[], [[FileSystem42, FSObject_3], [FileSystem42, FSObject_0], [FileSystem42, FSObject_1], [FileSystem42, FSObject_2]]]
 name: [[], [[FSObject_3, Name_3], [FSObject_3, Name_2], [FSObject_3, Name_1], [FSObject_3, Name_0], [FSObject_0, Name_3], [FSObject_0, Name_2], [FSObject_0, Name_1], [FSObject_0, Name_0], [FSObject_1, Name_3], [FSObject_1, Name_2], [FSObject_1, Name_1], [FSObject_1, Name_0], [FSObject_2, Name_3], [FSObject_2, Name_2], [FSObject_2, Name_1], [FSObject_2, Name_0]]]
 namexs: [[], [[FileSystem42, Name_3], [FileSystem42, Name_2], [FileSystem42, Name_1], [FileSystem42, Name_0]]]
 content: [[], [[FSObject_3, FSObject_3], [FSObject_3, FSObject_0], [FSObject_3, FSObject_1], [FSObject_3, FSObject_2], [FSObject_0, FSObject_3], [FSObject_0, FSObject_0], [FSObject_0, FSObject_1], [FSObject_0, FSObject_2], [FSObject_1, FSObject_3], [FSObject_1, FSObject_0], [FSObject_1, FSObject_1], [FSObject_1, FSObject_2], [FSObject_2, FSObject_3], [FSObject_2, FSObject_0], [FSObject_2, FSObject_1], [FSObject_2, FSObject_2]]]
int bounds: 
 []

no FileSystem & FSObject
no FileSystem & Name
no FSObject & Name
all n: Name | lone (n.~names)
all n: NameX | lone (n.~namexs)
all r: Root | lone (r.~root)
one FileSystem
all f: FileSystem | one (f.root)
FSObject = Dir + File2 + File
Dir in FSObject
File2 in FSObject
File in FSObject
no Dir & File2
no Dir & File
no File2 & File
all f: FSObject | one (f.name)
Root in Dir
all f: FSObject | lone (f.~content)
all d: Dir | !(d in (d.^content))
some content
one Root
NameX in Name
all n: Name | n in (FileSystem.names)
all x: NameX | x in (FileSystem.namexs)
FSObject in Root.*content
no Root.~content
all a: FSObject - Root, b: FSObject - Root | !(a = b => 
  (a.~content = b.~content => 
 !(a.name = b.name)))
Root = FileSystem.root
names in FileSystem -> Name
root in FileSystem -> Root
name in (Dir -> Name + File -> Name + File2 -> NameX)
namexs in FileSystem -> NameX
content in Dir -> File2